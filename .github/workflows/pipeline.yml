name: "ohadz-npm-gha"

on:   
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout
        uses: actions/checkout@v2
     #   with:
     #     sparse-checkout: |
     #      .github
     #      Source
      
      - name: Set up Node 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
        
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_USER: ${{ secrets.JF_USER }}
          JF_PASSWORD: ${{ secrets.JF_PASS }}
          SERVER_ID: setup-jfrog-cli-server
      
      - name: Test JFrog CLI
        run: |
          jf c show
          jf rt ping
          jf -v
    
      - name: Login to Docker Enviroment
        run: docker login ${{ vars.DOCKER_REG_SRV }} -u ${{ secrets.JF_USER }} -p ${{ secrets.JF_PASS }} 
        
      - name: NPM Config
        run: |
          jf rt npmc
          npm config ls -l
        working-directory: ./Source
        
      - name: Install NPM Project
        run: jf npm install --registry ${{ vars.NPM_REG }}
        working-directory: ./Source
      
      - name: Build Docker Image
        run: docker build -t ohadz-npm-project ./Source
     
      - name: Tag Docker Image
        run: docker tag ohadz-npm-project:latest soleng.jfrog.io/ohadz-test-docker/ohadz-npm-project:latest
        
      - name: Push Docker Image to RT
       #run: docker push $DOCKER_IMAGE_TAG
        run: jf docker push soleng.jfrog.io/ohadz-test-docker/ohadz-npm-project:latest
      
      - name: Collect and Publish Build Info
        run: |
          # Collect environment variables for the build
          jf rt bce
          # Collect VCS details from git and add them to the build
          jf rt bag
          # Publish build info
          jf rt bp
          
   #   - name: Scan Build
   #     run: jf bs --fail=false
          
    
